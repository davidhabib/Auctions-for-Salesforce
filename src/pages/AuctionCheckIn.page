<!-- 
// Written by David Habib, copyright (c) 2009-2013 DJH Consulting, djhconsulting.com 
// This program is released under the GNU Affero General Public License, Version 3. http://www.gnu.org/licenses/
-->

<apex:page docType="html-5.0" controller="AUC_CTRL_AuctionCheckIn"  title="Auction Check In"  tabStyle="Check_In__tab" >

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/redmond/jquery-ui.css" type="text/css" />
    <apex:stylesheet value="{!$Resource.AuctionCommonStylesCSS}" />
    
    <style> 
    
        /* this styling adds the vertical scrollbar to our autocomplete fields */
        .ui-autocomplete-input {
            margin: 2px 0px 0 2px;
            padding: 1px;       
            display: inline-block;
            vertical-align: middle !important;
        }
        .ui-autocomplete { 
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
            font-size: 12px; 
            font-family: Arial, Helvetica, sans-serif;
        }
        
        /* these styles are for the combobox dropdown button */
        .ui-button {
            margin-left: 0px;
            
            height: 21px;
        }
        .ui-icon {
            height: 1em;
        }
        .ui-button-icon-only .ui-button-text { padding: 0; } 
        
        .ui-widget-content { 
            background: white;
        }
        
        .clsWaitRight { 
            background: url("//ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/base/images/ui-anim_basic_16x16.gif") right center no-repeat; 
        }
        
        
        .clsCombo { 
        
        }
        
        .clsBtnAll {
            top: 2px;
            position:relative;
        }
        
        .clsDTEven {
            background: white;
        }
        
        .clsDTOdd {
            background: AliceBlue;
        }
        
        .clsDTHeader  {
            background: #C0D0E5;
        }
        
        .bPageBlock .detailList th {
            vertical-align: middle;
        }
        
        .bPageBlock .detailList td {
            vertical-align: middle;
        }
        
        .clsDTFooter  {
            background: #C0D0E5;
        }
        
        .hilite { 
            background: yellow; 
        }
        
        .clsAttendeeLink a {
            text-decoration: none;
        }
        
        .panelSearch {
        }
        .panelSearch .detailList .labelCol label {
            display:block;
            width: 150px;
        }
        
        .panelEdit {
        }
        .panelEdit .detailList .labelCol label {
            display:inline-block;
            width: 150px;
        }
        
        td.sideLeft {
            width: 30%;
            min-width: 400px;
        }
        
        .panelSearch .detailList .data2Col {
            position: relative;
        }
        
        .panelEdit .detailList .data2Col {
            position: relative;
        }   
        
        .cssLoadingPP {
            top: 60%;
        }   
    
    .black_overlay{
           display: none;
           position: absolute;
           top: 0%;
           left: 0%;
           width: 100%;
           height: 100%;
           background-color: black;
           z-index:1001;
           -moz-opacity: 0.8;
           opacity:.40;
           filter: alpha(opacity=80);
      }

    </style>
    
    
    <script type="text/javascript">
        var j$ = jQuery.noConflict();
        
        var listCaptains = null; // our cached list of Captains (contacts and accounts) for the current Auction.
        var auctionId = "{!JSENCODE(auctionId)}"; // the current Auction.
        
        /*******************************************************************************************************
        * this function is called when the page loads
        ********************************************************************************************************/
        j$(document).ready(function() {
            myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}', '{!JSENCODE(strNameCaptain)}');
        }); 
        
        /*******************************************************************************************************
        * the work hours to do all jQueryUI initialization (specifically setting up the autocompletes).
        ********************************************************************************************************/
        function myInitializeJQueryUI(strNameAttendee, strNameCaptain) {
        
            // eat the enter button, to prevent it from canceling or submitting the form.
            j$(document).keydown(function(event) {
                if (event.which == 13) {
                    event.preventDefault();
                    event.stopPropagation();
                    return false; // does preventDefault and stopPropagation
                }  
            });
            
            /*******************************************************************************************************
            * setup the Attendee autocomplete textbox
            *******************************************************************************************************/
            j$(".clsComboAttendees").autocomplete({
                minLength: 4,
                delay: 500,
                
                // focus called when the user hilights an item by arrowing or mousing over the list 
                // we needed to override and stop this, otherwise the Id was displayed in the textbox.
                focus: function(event, ui) {
                    return false;
                } 
            })
            .data("autocomplete")._renderItem = function(ul, item) {
                return j$( "<li></li>" )
                .data("item.autocomplete", item)
                .append( '<a><b>' + item.label + '</b>' +
                '&nbsp;&nbsp;&nbsp;<i>' + strNull(item.contact.MailingStreet) + 
                (strNull(item.contact.MailingStreet)=='' ? '' : ', ') + strNull(item.contact.MailingCity) + '</i></a>' )
                .appendTo( ul );
            };      
            
            /*******************************************************************************************************
            * specify the specific fill function for Attendees
            *******************************************************************************************************/
            j$("#txtAttendees").autocomplete("option", "source",
            function(request, response) {
                j$('#txtAttendees').addClass('clsWaitRight');                       
                var strSearch = j$.trim(request.term.toLowerCase());        
                AUC_CTRL_AuctionCheckIn.getListAttendees(auctionId, strSearch, function(result, event) {
                    j$('#txtAttendees').removeClass('clsWaitRight');                                            
                    if (event.type == 'exception') {
                        alert(event.message);
                    } else {
                    if (result != null) {
                        fillAndMatchAttendeesCombo(result, request, response);
                    }
                    }
                }, {escape:true});              
            }
            );  
            
            /*******************************************************************************************************
            * given the list of Attendee, what is being searched for, and the response object,
            * fill in the response with the combo's items that match.
            *******************************************************************************************************/
            function fillAndMatchAttendeesCombo(listCons, request, response) {
                var strSearch = j$.trim(request.term.toLowerCase());        
                var isMatch = false;
                response(j$.map(listCons, function(item) {
                    var strLower = item.Name.toLowerCase();
                    if (strLower.indexOf(strSearch) >= 0) {
                        // if we find the exact match, get its formal text and id.
                        // ideally, we'd select it, but I couldn't figure out how!
                        if (strLower == strSearch) {
                            j$("#txtAttendees").val(item.Name).data('Id', item.Id);
                            isMatch = true;
                        }
                        return {label: item.Name, value: item.Id, contact: item};
                    }
                }));
                
                // if we don't find a match for a real search, clear the combo.
                if (!isMatch && strSearch != '') {
                    j$("#txtAttendees").data('Id', null);
                }                                                                                   
            }
            
            /*******************************************************************************************************
            * specify the select event for Attendees, so it can update the controller to refresh the Attendee panel. 
            * Triggered when an item is selected from the menu; 
            * ui.item refers to the selected item. 
            *******************************************************************************************************/
            j$('#txtAttendees').autocomplete("option", "select",
            function(event, ui) {
                j$(this).val(ui.item.label).data('Id', ui.item.value);
                // call the controller to update the Attendee panel.
                ChangeAttendeeLookup(ui.item.value);                    
                return false;                
            }
            );
            
            /*******************************************************************************************************
            * specify the Change event for Attendees, so it can update the controller to refresh the Attendee panel. 
            * Change called when the field is blurred (loses focus), if the value has changed;
            * ui.item refers to the selected item, if one was selected from the autocomplete menu.
            *******************************************************************************************************/
            j$('#txtAttendees').autocomplete("option", "change",
            function(event, ui) {
                // if ui.item is provided, we already dealt with it in the select event.
                if (ui.item != null) return false;  
                
                var Id = j$(this).data('Id');
                if (Id == null && j$(this).val() != null) {
                    // did the user give enough time for the search to run?
                    // better go the search route!
                    SearchAttendeeLookup(j$(this).val());
                    return false;               
                }
                ChangeAttendeeLookup(Id);
                return false;               
            }
            );
            
            /*******************************************************************************************************
            * setup the Table Captains autocomplete textbox
            *******************************************************************************************************/
            j$(".clsComboCaptains").autocomplete({
                minLength: 4,
                delay: 500,
                
                // focus called when the user hilights an item by arrowing or mousing over the list 
                // we needed to override and stop this, otherwise the Id was displayed in the textbox.
                focus: function(event, ui) {
                    return false;
                }
            });     
            
            /*******************************************************************************************************
            * specify the specific fill function for Captains
            * gets all ticket holders, and filters in the browser, since the list will be small enough.
            *******************************************************************************************************/
            j$("#txtCaptains").autocomplete("option", "source",
            function(request, response) {       
                // Gets all ticket holders, and filters in the browser, since the list will be small enough.
                if (listCaptains != null) {
                    fillAndMatchCaptainsCombo(listCaptains, request, response);
                } else{           
                    j$('#txtCaptains').addClass('clsWaitRight');                        
                    AUC_CTRL_AuctionCheckIn.getListCaptains(auctionId, '', function(result, event) {
                        j$('#txtCaptains').removeClass('clsWaitRight');                                         
                        if (event.type == 'exception') {
                            alert(event.message);
                        } else {
                            if (result != null) {
                                listCaptains = result;
                                fillAndMatchCaptainsCombo(listCaptains, request, response);
                            }
                        }
                    }, {escape:false});             
                }
            }
            );  
            
            /*******************************************************************************************************
            * given the list of contact, what is being searched for, and the response object,
            * fill in the response with the combo's items that match.
            *******************************************************************************************************/
            function fillAndMatchCaptainsCombo(listCapts, request, response) {
                var strSearch = j$.trim(request.term.toLowerCase());    
                if (strSearch == '--all--') strSearch = '';                 
                var isMatch = false;
                response(j$.map(listCapts, function(item) {
                    var strLower = item.Name.toLowerCase();
                    if (strLower.indexOf(strSearch) >= 0) {
                        // if we find the exact match, get its formal text and id.
                        // ideally, we'd select it, but I couldn't figure out how!
                        if (strLower == strSearch) {
                            j$("#txtCaptains").val(item.Name).data('Id', item.Id);
                            isMatch = true;
                        }                   
                        return {label: item.Name, value: item.Id};
                    }
                }));
                
                // if we don't find a match for a real search, clear the cached value.
                if (!isMatch ) {
                    j$("#txtCaptains").data('Id', null);
                }                                                                      
            
            }
            
            /*******************************************************************************************************
            * specify the select event for Captains, so it can cause the Attendee panel to refresh.
            *******************************************************************************************************/
            j$('#txtCaptains').autocomplete("option", "select",
            function(event, ui) {
                var prevId = j$(this).data('Id');
                j$(this).val(ui.item.label).data('Id', ui.item.value);
                if (prevId != ui.item.value) {
                    // call the controller to update the Attendee panel.
                    ChangeCaptainLookup(ui.item.value);                 
                }
                return false;                
            }
            );
            
            /*******************************************************************************************************
            * specify the Change event for Captains, so it can update the controller to refresh the Attendee panel. 
            * Change called when the field is blurred (loses focus), if the value has changed;
            * ui.item refers to the selected item, if one was selected from the autocomplete menu.
            *******************************************************************************************************/
            j$('#txtCaptains').autocomplete("option", "change",
            function(event, ui) {
                // if ui.item is provided, we already dealt with it in the select event.
                if (ui.item != null) return false;              
                var Id = j$(this).data('Id');
                ChangeCaptainLookup(Id);
                return false;               
            }
            );
            
            /*******************************************************************************************************
            * setup the button for showing all items        
            *******************************************************************************************************/
            j$(".clsBtnAll" )
            .attr( "tabIndex", -1 )
            .attr( "title", "Show All Items" )
            .button({
                icons: {
                    primary: "ui-icon-triangle-1-s"
                },
                text: false
            })
            .removeClass( "ui-corner-all" )
            .addClass( "ui-corner-right ui-button-icon" )
            .click(function() {
                // find our input textbox to our left
                var input = j$(this).prev('input');
                if (input.autocomplete( "option", "source" ) == null) return;
                // close if already visible
                if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
                    input.autocomplete( "close" );
                    return;
                }
                
                // work around a bug (likely same cause as #5265)
                j$( this ).blur();
                
                // pass empty as value to search for all
                input.autocomplete( "search", "--all--" );
                input.focus();
            }); 
            
            // hiliting the row on hover
            j$(".clsDTEven, .clsDTOdd").hover(function() {
                j$(this).addClass("hilite");
            }, function () {
                j$(this).removeClass("hilite");
            });     
            
            // set Attendee & captain names
            j$('#txtCaptains').val(strNameCaptain); 
            j$('#txtAttendees').val(strNameAttendee);   
        
        } // end of myInitializeJQueryUI
        
        
        /*******************************************************************************************************
        * utility to deal with strings that might be null.
        *******************************************************************************************************/
        function strNull(str) {
            return (str == null ? '' : str);
        }
        
        /*******************************************************************************************************
        * helper function to select the specified contact from the Attendee table 
        *******************************************************************************************************/
        function selectContactIdAttendee(id, fPost) {
            var radio = j$('#radio'+id);
            if (radio != '') {
                radio.attr('checked', 'checked');
            }
            if (fPost == true) {
                // call the controller to update the Attendee panel.
                ChangeAttendeeLookup(id);                   
            }
        }
        
        /*******************************************************************************************************
        * onClick event handler for the Attendees data table row
        *******************************************************************************************************/
        function OnDTRowClick(row) {
            var id = j$(row).find('input').first().val();
            selectContactIdAttendee(id, true);
        }
    
    </script>
    <script>                        
        /*******************************************************************************************************
        * utility to invoke the credit card payment processor
        * NOTE: had to locate this within the outputPanel that gets refreshed, to get the current URL formula.
        *******************************************************************************************************/
        function displayPaymentProcessor(strPaymentMethod) {
            ChangePaymentMethod();
            return;
        
        }       
    </script>                   
        
    <script type="text/javascript">
        
        /******** C&P Code Start *************/  
        function imposeMaxLength(Event, Object, MaxLen){
              var e = window.event ? event.keyCode : Event.which;
              if((e==32) || (e==13) || (e > 47)){
                  if(MaxLen && (Object.value.length > MaxLen-1)){
                        Object.value = Object.value.substr(0,MaxLen);  
                        if(window.event){
                             window.event.returnValue=null;
                        }else{
                            return false;
                        }
                   } 
              }
         }
            /*********No.of Tickets validation************/
                function nooftickets(){
                    var condition=0;
                    var amount = jQuery(".Amount").val();
                    var nooftickets=jQuery(".Number_of_Tickets__c").val();
                    var paaspackage=jQuery(".paaspackage").val();
                    if(paaspackage=='true'&& parseInt(amount)<=0){
                        condition=1;
                        alert("Amount Should be greater than 0");
                        jQuery(".Amount").focus();
                        return false; 
                    }
                    if( paaspackage=='true'&& parseInt(nooftickets)<=0){
                        condition=1;
                        alert("No of Tickets should not be lessthan 1");
                        jQuery(".Number_of_Tickets__c").focus();
                        return false;
                    }
                    if(condition==0){
                        return true;
                    }else{
                        return false;
                    }
                }
        
            /*********Credit Card Entry Mode as CardReader**********/
                function focuscard(){
                    var cardoption= jQuery.trim(jQuery(".cardoption").val());
                    var cardreader= jQuery.trim(jQuery(".cardreader").val());
                    if(cardoption == 'CardReader') { 
                        jQuery(".cardreaderrow").show();
                        jQuery(".cardreader").focus(); 
                        jQuery(".cvv").hide();
                        jQuery(".cvvlabel").hide();
                    }else {
                        jQuery(".cvv").show();
                        jQuery(".cvvlabel").show();
                        jQuery(".cardreaderrow").hide();
                    }
                }
                function cardReaderTexChange() { 
                    var carddata = jQuery(".cardreader").val();
                    var c=carddata.match(/\?/g);
                    if (c.length == 2){ 
                        parseCardReader2(carddata.toString()); 
                    }
                } 
                function parseCardReader2(carddata) { 
                
                    var cardnum = carddata.substr(2,16).replace('^','');;
                    var name = carddata.match("/^(.*?)^");
                    
                    var start_pos = carddata.indexOf('^') + 1;
                    var end_pos = carddata.indexOf('^',start_pos);
                    var text_to_get = carddata.substring(start_pos,end_pos).replace('/',' ');
                    
                    var delimitersplit = carddata.split('^');
                    
                    var expireyear = delimitersplit[2].substr(0,2);
                    var expiremonth = delimitersplit[2].substr(2,2);
                    jQuery('.creditcardname').val(text_to_get.replace('/',' '));
                    var cardnames =text_to_get.split(' ');
                    var cardtemp=cardnum.substr(-4);
                    
                    if(cardnum.length==16){
                        jQuery('.dummycardnumber').val('************'+cardtemp);
                    }
                    if(cardnum.length==15){
                        jQuery('.dummycardnumber').val('***********'+cardtemp);
                    }
                    jQuery('.creditcardnumber').val(cardnum);
                    jQuery('.expiremonth').val(expiremonth);
                    jQuery('.expireyear').val(expireyear);
                    jQuery(".cardreader").hide();
                    jQuery(".cardlabel").hide();
                    jQuery(".creditcardnumber").hide();
                    jQuery(".dummycardnumber").show();
                }
            /***********Payment Method Validations****************/
                function paymentprocess(){
                    var condition=0;
                    var acc=jQuery.trim(jQuery(".acc").val());
                    var cardoption= jQuery.trim(jQuery(".cardoption").val());
                    var cardreader= jQuery.trim(jQuery(".cardreader").val());
                    var creditcardname=jQuery.trim(jQuery(".creditcardname").val());
                    var creditcardnumber=jQuery.trim(jQuery(".creditcardnumber").val());
                    var creditexpiremonth=jQuery.trim(jQuery(".expiremonth").val());
                    var cvv=jQuery.trim(jQuery(".cvv").val());
                    var reg_creditname=/^([a-zA-Z0-9\.\,\#\&\-\ ])+$/;
                    var routingnumber=jQuery.trim(jQuery(".routingnumber").val());
                    var checknumber=jQuery.trim(jQuery(".checknumber").val());
                    var accountnumber=jQuery.trim(jQuery(".accountnumber").val());
                    var repeataccountnumber=jQuery.trim(jQuery(".repeataccountnumber").val());
                    var checkname=jQuery.trim(jQuery(".checkname").val());
                    var reg_cardname=/^([a-zA-Z0-9\.\,\#\-\'\ ])+$/; 
                    var reg_cardtype =/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})+$/;
                    var reg_number=/^([0-9])+$/; 
                     var reg_email = /^([A-Za-z0-9_\-\+\&\.\!\#\$\%\'\*\/\=\?\^\`\{\|\}\~])+\@([A-Za-z0-9\-\.])+\.([A-Za-z]{2,4})$/; // remove ; and _ adding &
                    var emaildata=jQuery.trim(jQuery(".internalemaillist").val());
                     if(emaildata!=''){
                          var emailsdata=jQuery.trim(jQuery(".internalemaillist").val()).split(';'); 
                                 for(var i=0;i<emailsdata.length;i++){
                                       if(!reg_email.test(emailsdata[i]) && emailsdata[i] != '' ){
                                            condition =1;
                                            alert("Please Enter the Valid Email ids");
                                            jQuery(".internalemaillist").focus();
                                            return false;
                                       }
                                 }
                     } 
                     
                    var ra=0;
                    var cr=0;
                    var pt;
                    jQuery(".paymenttype input:radio").each(function(){
                        cr=1;        
                        if(jQuery(this).is(':checked')==true){
                            ra=1;
                            pt = jQuery(this).val();
                        }
                    })
                    
                    var noofticket=nooftickets();
                    if(noofticket==false){
                        condition=1;
                        return false;
                    }
                    /**********Account Number **************/                  
                        if(acc==''){
                            condition=1;
                            alert("Please Select C&P Account Number to process Payments");
                            jQuery(".acc").focus();
                            return false;
                        }
                    /**********Credit Card **************/ 
                      if(pt==''){
                        condition = 1;
                        alert("Please choose one payment Method");
                        return false;
                    }   
                        if(pt=='CreditCard'){
                            if(cardoption == 'CardReader' && cardreader == ''){
                                condition=1;
                                alert("Please swipe your card");
                                return false;
                            }
                            if(!reg_cardtype.test(creditcardnumber)){
                                condition = 1;
                                alert("Invalid Credit Card Number");
                                jQuery(".creditcardnumber").focus();
                                return false;
                            }
                            if(creditcardname=="" || creditcardname==null){
                                condition = 1;
                                alert("Name on Card Must be defined");
                                jQuery(".creditcardname").focus();
                                return false;
                            }
                            if(creditcardname!="" && !reg_creditname.test(creditcardname)){
                                condition = 1;
                                alert("Please enter the only Alphanumeric . and space for  Name on Card");
                                jQuery(".creditcardname").focus();
                                return false;
                            }
                            if(creditexpiremonth=="--Select--" || creditexpiremonth==null){
                                condition = 1;
                                alert("Expiration Date must be defined");
                                jQuery(".expiremonth").focus();
                                return false;
                            }
                            if(creditcardnumber=="" || creditcardnumber==null){
                                condition = 1;
                                alert("Credit Card Number Must be defined");
                                jQuery(".creditcardnumber").focus();
                                return false;
                            }
                            if(creditcardnumber!='' && cardoption == 'Manual'&& isNaN(creditcardnumber)){
                                condition = 1;
                                alert("Credit Card Number Must be numerics only");
                                jQuery(".creditcardnumber").focus();
                                return false;
                            }
                            
                            if(isNaN(cvv)){
                                condition=1;
                                alert("Please Enter numbers only in Card Verification (CVV)");
                                jQuery(".cvv").focus();
                                return false;
                            }
                            if(cvv!="" && cvv.length<3){
                                condition=1;
                                alert("Please Enter a Number at least 3 digits in Card Verification (CVV)");
                                jQuery(".cvv").focus();
                                return false;
                            }
                        }
                    /**************eCheck****************/
                        if(pt=='Check'){
                            if(routingnumber=="" || routingnumber==null){
                                condition = 1;
                                alert("Routing Number Must be defined");
                                jQuery(".routingnumber").focus();
                                return false;
                            }else if(routingnumber!="" ){
                                if(!reg_number.test(routingnumber)){
                                    condition = 1;
                                    alert("Routing Number Must contain numerics only");
                                    jQuery(".routingnumber").focus();
                                    return false;
                                }else if(routingnumber.length<9){
                                    condition = 1;
                                    alert("Routing Number Must contain 9 digits");
                                    jQuery(".routingnumber").focus();
                                    return false;
                                }
                            }    
                            if(checknumber=="" || checknumber==null){
                                condition = 1;
                                alert("Check Number Must be defined");
                                jQuery(".checknumber").focus();
                                return false;
                            }else if(checknumber!="" && !reg_number.test(checknumber)){
                                condition = 1;
                                alert("Check Number Must contain numerics only");
                                jQuery(".checknumber").focus();
                                return false;
                            }
                            if(accountnumber=="" || accountnumber==null){
                                condition = 1;
                                alert("Account Number Must be defined");
                                jQuery(".accountnumber").focus();
                                return false;
                            }else if(accountnumber!="" && !reg_number.test(accountnumber)){
                                condition = 1;
                                alert("Account Number Must contain numerics only");
                                jQuery(".accountnumber").focus();
                                return false;
                            }
                            if(repeataccountnumber=="" || repeataccountnumber==null){
                                condition = 1;
                                alert("Repeat Account Number Must be defined");
                                jQuery(".repeataccountnumber").focus();
                                return false;
                            } else if(repeataccountnumber!="" && !reg_number.test(repeataccountnumber)) {
                                condition = 1;
                                alert("Repeat Account Number Must contain numerics only");
                                jQuery(".repeataccountnumber").focus();
                                return false;
                            }
                            if(repeataccountnumber!=accountnumber)
                            {
                                condition = 1;
                                alert("Account Numbers Does not Match");
                                jQuery(".repeataccountnumber").focus();
                                return false;
                            }
                            if(checkname=="" || checkname==null){
                                condition = 1;
                                alert("Name on Account Must be defined");
                                jQuery(".checkname").focus();
                                return false;
                            }else if(checkname!="" &&!reg_cardname.test(checkname)){
                                condition = 1;
                                alert("Please Enter valid data in Name on Account");
                                jQuery(".checkname").focus();
                                return false;
                            }
                        }
                    if(condition == 0){
                        return true;
                    }else{
                        return false;
                    }
                }                          
        
        
        /********C&P Code End*************/  
    </script>
    <apex:sectionHeader title="Auction Check In" />
    <apex:form >    
        <apex:pageBlock mode="edit" title="Search by Guest or Captain" >
            <apex:actionStatus id="statusLoad" onstart="j$('#divLoading').fadeIn();" onstop="j$('#divLoading').fadeOut();" />
            <div class="cssLoading" id="divLoading" >
                <p style="vertical-align: middle;" >
                    <img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
                    <span class="loadingText" style="vertical-align: middle;" >Loading...</span>
                </p>
            </div>   
             <apex:actionStatus id="statusLoad1" onstart="j$('#fade').fadeIn();" onstop="j$('#fade').fadeOut();" />
              <div id="fade" class="black_overlay">
              <p style="vertical-align: middle;" >
                    <img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
                    <span class="loadingText" style="vertical-align: middle;" >Loading...</span>
                </p>
              </div>                                                                 
            <table cellpadding="0">
                <tr>
                    <td class="sideLeft" style="vertical-align:top;">           
                        <apex:outputPanel id="panelSearch" styleClass="panelSearch" >                           
                            <apex:pageBlockSection columns="1"  >
                                <apex:pageBlockSectionItem >
                                    <apex:outputLabel value="Auction" for="lbxAuctions" />
                                    <apex:selectList value="{!auctionId}" size="1" id="lbxAuctions" >
                                        <apex:actionSupport event="onchange" status="statusLoad" action="{!ChangeAuction}" 
                                        rerender="panelSearch,panelEdit,panelAttendees,panelStatus,panelCreditCard,panelCreditCard1" 
                                        oncomplete="auctionId='{!auctionId}'; listCaptains=null; myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');" />                            
                                        <apex:selectOptions value="{!listSOAuctions}" />
                                    </apex:selectList>  
                                </apex:pageBlockSectionItem>
                                <apex:pageBlockSectionItem labelStyle="vertical-align:middle;" dataStyle="vertical-align:middle;">
                                    <apex:outputLabel value="Guest" />
                                    <apex:outputPanel >
                                        <input type="text" id="txtAttendees" class="clsCombo clsComboAttendees ui-autocomplete-input" />            
                                        <apex:actionFunction action="{!ChangeAttendeeLookup}" name="ChangeAttendeeLookup" status="statusLoad" 
                                        rerender="panelSearch,panelEdit,panelAttendees,panelStatus,panelCreditCard,panelCreditCard1" 
                                        oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');" >
                                            <apex:param name="param1" assignTo="{!contactIdAttendee}" value="" />
                                        </apex:actionFunction>
                                        <apex:actionFunction action="{!SearchAttendeeLookup}" name="SearchAttendeeLookup" status="statusLoad" 
                                        rerender="panelSearch,panelEdit,panelAttendees,panelStatus,panelCreditCard,panelCreditCard1" 
                                        oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');" >
                                            <apex:param name="param1" assignTo="{!searchAttendee}" value="" />
                                        </apex:actionFunction>
                                    </apex:outputPanel>
                                </apex:pageBlockSectionItem>        
                                <apex:pageBlockSectionItem labelStyle="vertical-align:middle;" dataStyle="vertical-align:middle;">
                                    <apex:outputLabel value="Table Captain<br/>(or organization)" escape="false" />
                                    <apex:outputPanel id="panelCaptains" >
                                        <input type="text" id="txtCaptains" class="clsCombo clsComboCaptains ui-autocomplete-input" /><button id="btnCaptainsAll" class="clsBtnAll ui-button ui-widget ui-state-default ui-button-icon-only ui-corner-right ui-button-icon" type="button" >&nbsp;</button>            
                                        <apex:actionFunction action="{!ChangeCaptainLookup}" name="ChangeCaptainLookup" status="statusLoad" 
                                        rerender="panelSearch,panelEdit,panelAttendees,panelStatus,panelCreditCard,panelCreditCard1" 
                                        oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');" >
                                            <apex:param name="param1" assignTo="{!idCaptain}" value="" />
                                        </apex:actionFunction>
                                    </apex:outputPanel>                         
                                </apex:pageBlockSectionItem>
                        
                            </apex:pageBlockSection>
                        </apex:outputPanel>
                    </td>
                    <td style="vertical-align:top;">
                        <apex:outputPanel id="panelStatus" >                            
                            <apex:pageMessage summary="{!(strStatus)}" severity="info" strength="2" escape="false" rendered="{!strStatus != null}" />  
                            <apex:messages styleClass="Error" />
                        </apex:outputPanel>
                    </td>              
                </tr>           
                <tr>
                    <td class="sideLeft" style="vertical-align:top;" >
                        <apex:outputPanel id="panelEdit" styleClass="panelEdit">        
                            <apex:pageBlockSection title="{!IF(attendeeEdit.con.Id != null, attendeeEdit.con.Name, 'New Contact')}" 
                            columns="1" id="pbsEdit" collapsible="false" >                      
                                <!-- contact fields use a fieldset -->
                                <apex:repeat value="{!$ObjectType.Contact.FieldSets.AuctionsCheckInFS}" var="f" >
                                    <apex:inputField value="{!attendeeEdit.con[f]}" required="false" />
                                </apex:repeat>        
                                <hr/>
                                <!-- CM fields use a fieldset -->
                                <apex:repeat value="{!$ObjectType.CampaignMember.FieldSets.AuctionsCheckInCMFS}" var="f" >
                                    <apex:inputField value="{!attendeeEdit.cm[f]}" required="false" />
                                </apex:repeat>                           
                                <!-- hardcoded fields to add new ticket purchase -->
                                <apex:pageBlockSectionItem rendered="{!if((paaspackage == true && oppTicketAttendee.Id==null)||(paaspackage == false),true,false)}">
                                    <apex:outputLabel value="Add Ticket Purchase" />
                                    <apex:inputCheckbox value="{!fAddTicketPurchase}"> 
                                        <apex:actionSupport event="onchange" status="statusLoad" 
                                        rerender="panelSearch,panelEdit,panelAttendees,panelTicketPurchase,panelStatus,panelCreditCard,panelCreditCard1" 
                                        oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');" />
                                    </apex:inputCheckbox>                           
                                </apex:pageBlockSectionItem>
                            </apex:pageBlockSection>  
                            <apex:inputtext value="{!paaspackage}" styleclass="paaspackage" style="display:none"/>  
                            <apex:outputPanel id="panelTicketPurchase" rendered="{!fAddTicketPurchase}" styleClass="panelEdit" >
                                <apex:pageBlockSection title="New Ticket Purchase" columns="1" collapsible="false" > 
                                    <!-- Ticket Opportunity fields from a fieldset -->
                                    <apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionCheckInFS}" var="f" >
                                    <apex:inputField value="{!oppTicketAttendee[f]}" required="false" styleclass="{!f}" />
                                    </apex:repeat>                           
                                </apex:pageBlockSection>                                        
                            </apex:outputPanel>         
                            <br/>
                            <div style="white-space:nowrap;" >
                                &nbsp;&nbsp;&nbsp;&nbsp;
                                <apex:commandButton value="{!IF(attendeeEdit.con.Id != null, 'Save & Check In Contact', 'Save & Check In New Contact')}" action="{!SaveAttendeeInfo}" status="statusLoad" rerender="panelSearch,panelEdit,panelAttendees,panelStatus,panelCreditCard,panelCreditCard1" oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');" onclick="if(!nooftickets()){return false;}" />&nbsp;&nbsp;
                                <apex:commandButton value="Save Credit Card" rendered="{!contactIdAttendee!=null && fShowPaymentProcessorOnPage==false && paaspackage==false}" onclick="if ('{!strCreditCardValidateURL}' == '') {alert('Please refer to the Auctions Installation and Configuration Guide to set up a payment processor.'); } else { window.open('{!JSENCODE(strCreditCardValidateURL)}','','{!JSENCODE(strPaymentProcessorWindowParameters)}');}return false;"/>
                                <apex:commandButton value="Save Credit Card" rendered="{!contactIdAttendee!=null && fShowPaymentProcessorOnPage && paaspackage==false}"  action="{!ShowPanelCreditCard}" status="statusLoad" rerender="panelCreditCard" onclick="if ('{!strCreditCardValidateURL}' == '') { alert('Please refer to the Auctions Installation and Configuration Guide to set up a payment processor.');return false;}" oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');" />&nbsp;&nbsp;
                                <apex:commandButton value="Save Credit Card" rendered="{!contactIdAttendee!=null  && paaspackage==true}" action="{!ShowPanelCreditCard}" status="statusLoad" rerender="panelCreditCard,panelCreditCard1" oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}','{!JSENCODE(strNameCaptain)}');"  />&nbsp;&nbsp;         
                                <apex:commandButton value="Next Guest" action="{!NextGuest}" immediate="true" />&nbsp;&nbsp;    
                                <apex:commandButton value="Close" action="{!Close}" immediate="true" /> 
                                
                                <br/><br/>                                                             
                            </div>
                            <apex:messages styleClass="Error" />
                        </apex:outputPanel>  
                    </td> 
                    <td style="vertical-align:top;" >
                        <apex:outputPanel id="panelAttendees" >                                                         
                            <apex:pageBlockSection title="Guests" columns="1" id="pbsAttendees" rendered="{!idCaptain!=null}" collapsible="true" >
                                <apex:pageBlockTable value="{!listAttendees}" var="attendee"  
                                onRowClick="OnDTRowClick(this); return false;"  >  
                                    <apex:column headerValue=" " >
                                        <apex:outputPanel rendered="{!attendee.cm.contactId!=contactIdAttendee}" >  
                                            <input type="radio" name="radioGrpContact" id="radio{!attendee.cm.contactId}" value="{!attendee.cm.contactId}" 
                                            onclick="selectContactIdAttendee('{!attendee.cm.contactId}', true);" />
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!attendee.cm.contactId==contactIdAttendee}" >  
                                            <input type="radio" name="radioGrpContact" id="radio{!attendee.cm.contactId}" value="{!attendee.cm.contactId}" checked="checked" />
                                        </apex:outputPanel>
                                        </apex:column>                                                      
                                        <apex:column >
                                            <apex:facet name="header">Contact</apex:facet>
                                            <span class="clsAttendeeLink">
                                                <apex:outputField value="{!attendee.cm.contactId}" rendered="{!attendee.con.Id != null}" />
                                                <apex:commandLink value="(available ticket)" rendered="{!attendee.con.Id == null}" />
                                            </span>
                                    </apex:column>                  
                                    <!-- CM fields use a fieldset -->
                                    <apex:repeat value="{!$ObjectType.CampaignMember.FieldSets.AuctionsCheckInGuestsCMFS}" var="f" >
                                        <apex:column value="{!attendee.cm[f]}" /> 
                                    </apex:repeat>                           
                                </apex:pageBlockTable>  
                            </apex:pageBlockSection>
                        </apex:outputPanel>                     
                    </td>
                </tr>
                <tr>
                    <td colspan="2">                
                        <apex:outputPanel id="panelCreditCard" >
                            <apex:outputPanel rendered="{!if((paaspackage==false && fShowPanelCreditCard==true),true,false)}">
                                <div class="cssLoading cssLoadingPP"  >
                                    <p style="vertical-align: middle; text-align:center;" >
                                        <img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
                                        <span style="vertical-align: middle;" >Loading Payment Processor...</span>
                                    </p>
                                </div>                      
                                <iframe id="iframePP" frameborder="0" width="95%" scrolling="auto" height="{!strPaymentProcessorPageHeight}" src="{!strCreditCardValidateURL}" />
                                <script>
                                    j$('.cssLoadingPP').fadeIn();
                                    j$('#iframePP').load(function(){  
                                    j$('.cssLoadingPP').fadeOut();
                                    });
                                </script>
                            </apex:outputPanel>
                        </apex:outputPanel>                                     
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <!-- *************** C&P Code Start************* -->
                        <!-- ***************Send Receipt section************* -->
                                
                        
                        
                        <apex:outputPanel id="panelCreditCard1" >
                                <apex:pageBlockSection title="Payment Method" rendered="{!if(( CnPAccount.size != 0 && paaspackage==true && fShowPanelCreditCard==true && hideform)||(tryagain),true,false)}" columns="1" >
                                    <apex:pageBlockSectionItem >
                                         <apex:outputLabel value="Send Receipt"/>
                                          <apex:inputCheckbox value="{!xmlReceipt.SendReceipt}" >
                                          </apex:inputCheckbox>
                                   </apex:pageBlockSectionItem>
                                <apex:pageBlockSection columns="1">
 
                                    <apex:pageBlockSectionItem >
                                           <apex:outputLabel value="Organization Information" />
                                           <apex:inputTextarea value="{!xmlReceipt.OrganizationInformation}" styleClass="organizationinfo" rows="6" cols="75" onkeypress="return imposeMaxLength(event, this, 1500);" onkeyup="return imposeMaxLength(event, this, 1500);"/>
                                    </apex:pageBlockSectionItem>
                                     
                                    <apex:pageBlockSectionItem >
                                           <apex:outputLabel value="Thank you Message"/>
                                           <apex:inputTextarea value="{!xmlReceipt.ThankYouMessage}" styleClass="thankyou" rows="6" cols="75" onkeypress="return imposeMaxLength(event, this, 500);" onkeyup="return imposeMaxLength(event, this, 500);"/>
                                   </apex:pageBlockSectionItem>
                                     
                                   <apex:pageBlockSectionItem >
                                           <apex:outputLabel value="Terms & Conditions (the following HTML tags are allowed: <P></P><BR /><OL></OL><LI></LI><UL></UL>)"/>
                                           <apex:inputTextarea value="{!xmlReceipt.TermsCondition}" styleClass="TermsCondition" rows="6" cols="75" onkeypress="return imposeMaxLength(event, this, 1500);" onkeyup="return imposeMaxLength(event, this, 1500);"/>
                                   </apex:pageBlockSectionItem>
                                     
                                    <apex:pageBlockSectionItem >
                                           <apex:outputLabel value="Internal Notification (type email addresses separated by semicolon max=1000 chars)" onkeypress="return imposeMaxLength(event, this, 1000);" onkeyup="return imposeMaxLength(event, this, 1000);"></apex:outputLabel>
                                           <apex:inputTextarea value="{!xmlReceipt.EmailNotificationList}" styleClass="internalemaillist" rows="6" cols="75" onkeypress="return imposeMaxLength(event, this, 1500);" onkeyup="return imposeMaxLength(event, this, 1500);"/>
                                    </apex:pageBlockSectionItem>
                             </apex:pageblockSection> 
                                   <!-- ***************Account Number based on cnpsettings************* -->
                                    <apex:pageBlockSectionItem >
                                        <apex:outputLabel value="C&P Account Number"></apex:outputLabel>                             
                                        <apex:outputPanel styleClass="requiredInput" layout="block"  >
                                            <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                            <apex:selectList value="{!XmlAuthentication.AccountID}" size="1" styleClass="acc" > 
                                            <apex:actionSupport event="onchange" action="{!accountchange}" rerender="refer,paymentdetails" />
                                                <Apex:selectOptions value="{!CnPAccount}"></Apex:selectOptions>
                                            </apex:selectList>
                                        </apex:outputpanel>
                                    </apex:pageBlockSectionItem>
                                    <!-- ***************Payment Types based on xml settings************* -->
                                    <apex:outputpanel id="refer">
                                        <apex:selectRadio value="{!strPaymentMethod}" style="font-weight:bold;" onclick="displayPaymentProcessor(this.value);" styleClass="paymenttype" >
                                            <apex:selectOption itemValue="CreditCard" itemLabel="Credit Card" rendered="{!creditcardpayment}"/>
                                            <apex:selectOption itemValue="Check" itemLabel="eCheck" rendered="{!echeckpayment}" />
                                         </apex:selectRadio>
                                    </apex:outputpanel> 
                                    <apex:actionFunction action="{!ChangePaymentMethod}" name="ChangePaymentMethod" status="statusLoad"  
                                    rerender="panelSearch,panelEdit,panelAttendees,panelStatus,panelCreditCard,panelCreditCard1"  
                                    oncomplete="myInitializeJQueryUI('{!JSENCODE(strNameAttendee)}');" >
                                    </apex:actionFunction> 
                                    
                                    <apex:outputpanel id="paymentdetails">
                                    <apex:outputpanel rendered="{!if((paymentform && paaspackage==true),true,false)}">
                                    <!-- ***************Credit Card Section************* -->
                                    <apex:outputPanel rendered="{!if(strPaymentMethod=='CreditCard',true,false)}" >
                                        <table>
                                            <tr>
                                                <td class="labelCol">
                                                    <apex:outputLabel value="Entry Mode" />
                                                </td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block" >
                                                        <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                        <apex:selectList size="1" value="{!selecttype}" styleClass="cardoption" onchange="focuscard();" >
                                                        <apex:selectOption itemLabel="Manual" itemValue="Manual"></apex:selectOption>
                                                        <apex:selectOption itemLabel="Card Reader" itemValue="CardReader"></apex:selectOption>
                                                        </apex:selectList>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                            <tr class="cardreaderrow" style="display:none;">                               
                                                <td class="labelCol">
                                                    <apex:outputLabel value="Place the mouse pointer here & swipe the credit card." styleClass="cardlabel" />
                                                </td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block"   >
                                                        <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                        <apex:inputSecret value="{!xmlpaymentMethod.TrackData}" styleClass="cardreader" onchange="cardReaderTexChange();" />
                                                    </apex:outputPanel>
                                                </td>
                                            </tr> 
                                            <tr>
                                                <td class="labelCol"><apex:outputLabel value="Name on Card" ></apex:outputLabel></td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block" >
                                                        <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                        <apex:inputText value="{!xmlpaymentMethod.NameOnCard}" styleClass="creditcardname" id="name" maxlength="50"/>
                                                    </apex:outputpanel>
                                                </td>
                                                <td class="labelCol"><apex:outputLabel value="Expiration Date"></apex:outputLabel></td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block"   >
                                                        <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                        <apex:selectList size="1" value="{!xmlpaymentMethod.ExpirationMonth}" styleClass="expiremonth"><apex:selectOptions value="{!xmlstring.ExpireMonth}" id="ExpirationMonth"></apex:selectOptions></apex:selectList>&nbsp;&nbsp;
                                                        <apex:selectList size="1" value="{!xmlpaymentMethod.ExpirationYear}" styleClass="expireyear"><apex:selectOptions value="{!xmlstring.ExpireYear}" id="ExpirationYear"></apex:selectOptions></apex:selectList>
                                                    </apex:outputpanel>
                                                </td>
                                            </tr>
                                            <tr>  
                                                <td class="labelCol"><apex:outputLabel value="Credit Card Number"></apex:outputLabel></td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block">
                                                        <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                        <apex:inputText value="{!xmlpaymentMethod.CardNumber}"  id="CardNo" styleClass="creditcardnumber" style="display:block" />
                                                        <input type="text" class="dummycardnumber" style="display:none"/>
                                                    </apex:outputpanel>
                                                </td> 
                                                <td class="labelCol"><apex:outputLabel value="Card Verification (CVV)" styleclass="cvvlabel"></apex:outputLabel></td>
                                                <td>
                                                    <apex:inputText value="{!xmlpaymentMethod.Cvv2}" size="6" maxlength="4" styleClass="cvv"/>
                                                </td>
                                            </tr>
                                        </table>
                                    </apex:outputpanel>                           
                                   
                                    <!-- **************eCheck Section************* -->
                                    <apex:outputPanel rendered="{!if(strPaymentMethod='Check',true,false)}" >
                                        <table class="detailList">
                                            <tr>
                                                <td class="labelCol"><apex:outputLabel value="Routing Number" style="" ></apex:outputLabel></td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block" >
                                                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                    <apex:inputText value="{!xmlpaymentMethod.RoutingNumber}" styleClass="routingnumber" maxlength="9"/>
                                                    </apex:outputpanel>
                                                </td>
                                                <td class="labelCol"><apex:outputLabel value="Check Number" style=""></apex:outputLabel></td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block">
                                                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                    <apex:inputText value="{!xmlpaymentMethod.CheckNumber}" styleClass="checknumber" maxlength="10"/>
                                                    </apex:outputpanel>
                                                </td>
                                            </tr>
                                            <tr>
                                            <td class="labelCol"><apex:outputLabel value="Account Number" style=""></apex:outputLabel></td>
                                            <td>
                                                <apex:outputPanel styleClass="requiredInput" layout="block"   >
                                                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                    <apex:inputText value="{!xmlpaymentMethod.AccountNumber}" styleClass="accountnumber" maxlength="17"/>
                                                </apex:outputpanel>
                                            </td>
                                            <td class="labelCol"><apex:outputLabel value="Retype Account Number" style="" ></apex:outputLabel></td>
                                            <td>
                                                <apex:outputPanel styleClass="requiredInput" layout="block"   >
                                                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                    <apex:inputText value="{!xmlpaymentMethod.AccountNumber}" styleClass="repeataccountnumber" maxlength="17"/>
                                                </apex:outputpanel>
                                            </td>
                                            </tr>
                                            <tr>
                                                <td class="labelCol"><apex:outputLabel value="Account Type" style=""></apex:outputLabel></td>
                                                <td>
                                                    <apex:selectList size="1" value="{!xmlpaymentMethod.AccountType}"><apex:selectOptions value="{!xmlstring.AccountTypes}"></apex:selectOptions></apex:selectList>
                                                </td>
                                                <td class="labelCol"><apex:outputLabel value="Check Type" style=""></apex:outputLabel></td>
                                                <td>
                                                    <apex:selectList size="1" value="{!xmlpaymentMethod.CheckType}"><apex:selectOptions value="{!xmlstring.CheckTypes}"></apex:selectOptions></apex:selectList>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="labelCol"><apex:outputLabel value="Name on Account" style=""></apex:outputLabel></td>
                                                <td>
                                                    <apex:outputPanel styleClass="requiredInput" layout="block"   >
                                                        <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                                        <apex:inputText value="{!xmlpaymentMethod.NameOnAccount}" styleClass="checkname"/>
                                                    </apex:outputpanel>
                                                </td>
                                                <td class="labelCol"><apex:outputLabel value="Type of ID" style=""></apex:outputLabel></td>
                                                <td>
                                                    <apex:selectList size="1" value="{!xmlpaymentMethod.IdType}"><apex:selectOptions value="{!xmlstring.IdTypes}"></apex:selectOptions></apex:selectList>
                                                </td>
                                            </tr>
                                            </table>
                                        </apex:outputPanel>
                                    <apex:commandButton value="Process Payment" action="{!Process}" status="statusLoad1"  rerender="panelCreditCard1"  rendered="{!if(strPaymentMethod!='',true,false)}" onclick="if(!paymentprocess()){return false;}" >  
                                    </apex:commandbutton> 
                                    </apex:outputpanel>  
                                </apex:outputpanel>
                            </apex:pageBlockSection> 
                             <!-- ***************If Account Number with status Active not exist in Cnp Settings Display the following Message************* -->
                            <apex:pageMessage severity="INFO" rendered="{!if((CnPAccount.size == 0 && paaspackage==true &&((fShowPanelCreditCard==true && hideform)||tryagain)),true,false)}" >
                                    <span style="font-weight:normal;">Before using the Check IN Payment Method, the Click &amp; Pledge platform has to be connected to your Salesforce instance.  The native Virtual Terminal in Salesforce also has to know what Click &amp; Pledge account it needs to use to post payments to. To establish connection between the systems please  follow the steps listed below:</span><br />
                                    <br /><strong> Enable Salesforce Connection:</strong> <br />
                                    <ol>
                                            <li>  Login to the Click &amp;  Pledge portal (<a href="https://portal.clickandpledge.com" style="color:#0000FF;" target="_blank">https://portal.clickandpledge.com</a>) </li>
                                            <li>   Click on Account Info</li>
                                            <li>   Click on 3rd Party tab</li>
                                            <li>   Click on Salesforce sub-tab</li>
                                            <li>   Add the requested information and “Verify &amp; Update” to save</li>
                                    </ol>
                                    <br /><strong> Set up C&amp;P Account info in C&amp;P Settings tab:</strong> <br />
                                    <ol>
                                            <li>  In Click &amp; Pledge portal click on Account Info</li>
                                            <li>  Click on Your Profile > API Information</li>
                                            <li>  Copy the Account ID &amp; API Account GUID</li>
                                            <li>  In Salesforce click on C&amp;P Settings tab</li>
                                            <li> Click on C&amp;P Account</li>
                                            <li>  Enter an identification name for C&amp;P Account Name.  This is for internal use only</li>
                                            <li>  Add C&amp;P Account Number from Step 3</li>
                                            <li>  Add C&amp;P Account GUID from Step 3</li>
                                            <li>  Set C&amp;P Account Status to Active</li>
                                            <li>  Click on Add/Update to save</li>
                                            <li>  Repeat steps 1- 10 for all C&amp;P Accounts. </li>
                                    </ol>
                                    <br />
                            
                            </apex:pageMessage>
          
                            <!-- ***************Error Message based on Xmlfile ************** -->
                            <apex:outputPanel rendered="{!if((xmlstring.TransactionResultCode!=0 && hideform == false),true,false)}" >
                                <apex:pageBlockSection title="Processing Result" collapsible="false">
                                    <b>Error Code</b>&nbsp;&nbsp;<apex:outputtext value="{!xmlstring.TransactionResultCode}"></apex:outputText>
                                    <b>Transaction Result</b>&nbsp;&nbsp;<apex:outputText value="{!xmlstring.ErrorData}"></apex:outputText>
                                    &nbsp;&nbsp; <apex:outputText value="{!xmlstring.additionalInfo}"></apex:outputText>
                                </apex:pageBlockSection>
                                <apex:commandButton value="Try Again" reRender="panelCreditCard1" rendered="{!if((xmlstring.TransactionResultCode!=0 && paymentform=false && hideform == false),true,false)}"  status="statusLoad" action="{!Retry}"/>
                             </apex:outputPanel>
                            <!-- ***************Success Message based on Xmlfile ************** -->
                            <apex:outputpanel rendered="{!if((xmlstring.TransactionResultCode=0 && hideform == false),true,false)}" >
                                <apex:pageBlockSection title="Processing Result" columns="2">
                                    <b>Transaction Result</b> &nbsp;&nbsp;  <apex:outputText value="{!xmlstring.ErrorData}"></apex:outputText>
                                    <b>Order Number</b>&nbsp;&nbsp;  <apex:outputText value="{!xmlstring.TransactionNumber}"></apex:outputText>
                                    <b>Vault GUID</b> &nbsp;&nbsp;  <apex:outputText value="{!xmlstring.vaultguid}"></apex:outputText>
                                    <b>Gateway Transaction Number</b>&nbsp;&nbsp;  <apex:outputText value="{!xmlstring.gatewaytransactionnumber}"></apex:outputText>
                                </apex:pageBlockSection>
                            </apex:outputPanel>
                        </apex:outputpanel>
                    </td>
                </tr>
            </table>
            
        </apex:pageBlock>
    </apex:form>
</apex:page>