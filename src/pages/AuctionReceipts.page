<!-- 
// Written by David Habib, copyright (c) 2009-2013 DJH Consulting, djhconsulting.com 
// This program is released under the GNU Affero General Public License, Version 3. http://www.gnu.org/licenses/
 -->

<apex:page docType="html-5.0" controller="AUC_CTRL_AuctionReceipts" title="Auction Receipts"  tabStyle="Auction_Receipts__tab" renderAs="{!RenderFormat}" showHeader="true">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js" type="text/javascript"></script>
<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/redmond/jquery-ui.css" type="text/css" />
<apex:stylesheet value="{!$Resource.AuctionCommonStylesCSS}" />

<style>	
	/* this styling adds the vertical scrollbar to our autocomplete fields */
	.ui-autocomplete-input {
		margin: 2px 0px 0 2px;
		padding: 1px;		
		display: inline-block;
		vertical-align: middle !important;
	}
	.ui-autocomplete {
		max-height: 200px;
		overflow-y: auto;
		/* prevent horizontal scrollbar */
		overflow-x: hidden;
		/* add padding to account for vertical scrollbar */
		padding-right: 20px;
		font-size: 12px; 
		font-family: Arial, Helvetica, sans-serif;
	}
	
	/* these styles are for the combobox dropdown button */
	.ui-button {
		margin-left: 0px;
		
		height: 21px;
	}
	.ui-icon {
		height: 1em;
	}
	.ui-button-icon-only .ui-button-text { padding: 0; } 
	
	.ui-widget-content { 
		background: white;
	}

	.clsWaitRight { 
		background: url("//ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/base/images/ui-anim_basic_16x16.gif") right center no-repeat; 
	}
	
	.clsCombo {	
			
	}
	
	.clsBtnAll {
		top: 2px;
		position:relative;
	}
			
	.panelSearch .detailList .data2Col {
		position: relative;
	}

	.panelEdit .detailList .data2Col {
		position: relative;
	}	

</style>

<script type="text/javascript">
    var j$ = jQuery.noConflict();
 	
    var listPurchasers = null; // our cached list of purchasers (contactId, name, bidNum) for the current Auction.
    var auctionId = "{!JSENCODE(auctionId)}"; // the current Auction.
 	
	/*******************************************************************************************************
	* this function is called when the page loads
	********************************************************************************************************/
	j$(document).ready(function() {
		myInitializeJQueryUI('{!JSENCODE(strNamePurchaser)}');
	});	
	
	/*******************************************************************************************************
	* the work hours to do all jQueryUI initialization (specifically setting up the autocompletes).
	********************************************************************************************************/
	function myInitializeJQueryUI(strNamePurchaser) {
	
		// eat the enter button, to prevent it from canceling or submitting the form.
		j$(document).keydown(function(event) {
			if (event.which == 13) {
		    	event.preventDefault();
		    	event.stopPropagation();
		    	return false; // does preventDefault and stopPropagation
		  	}  
		});		

		/*******************************************************************************************************
   	 	* setup the Purchasers autocomplete textbox
		*******************************************************************************************************/
		j$(".clsComboPurchasers").autocomplete({
			minLength: 3,
			delay: 200,

		   	// focus called when the user hilights an item by arrowing or mousing over the list 
		   	// we needed to override this, otherwise the Id was displayed in the textbox.
		   	focus: function(event, ui) { 
		   		j$(this).val(ui.item.label);
		   		return false;
		   	},
	   	})
		.data("autocomplete")._renderItem = function(ul, item) {
			return j$( "<li></li>" )
				.data("item.autocomplete", item)
				.append( '<a><b>' + item.label + '</b>' +
					'&nbsp;&nbsp;&nbsp;<i>' + strNull(item.bidderNumber) + '</i></a>' )
				.appendTo( ul );
		};	   	

		/*******************************************************************************************************
		* specify the specific fill function for Purchasers
		* gets all ticket holders and buyers, and filters in the browser, since the list will be small enough.
		*******************************************************************************************************/
		j$("#txtPurchasers").autocomplete("option", "source",
			function(request, response) {		
				// Gets all ticket holders, and filters in the browser, since the list will be small enough.
				// this also allows us to search by bid number which we add to the label.
				if (listPurchasers != null) {
					fillAndMatchPurchasersCombo(listPurchasers, request, response);
				} else 
					{			
	       			j$('#txtPurchasers').addClass('clsWaitRight');	        			
					GW_Auctions.AUC_CTRL_AuctionReceipts.getListPurchasers(auctionId, '', function(result, event) {
						j$('#txtPurchasers').removeClass('clsWaitRight');	        								
		        		if (event.type == 'exception') {
		        			alert(event.message);
		        		} else {
		        			if (result != null) {
		        				listPurchasers = result;
								fillAndMatchPurchasersCombo(listPurchasers, request, response);
			        		}
		        		}
			   		}, {escape:true});		   		
		   		}
		   	}
		);	
		
		/*******************************************************************************************************
		* given the list of Purchasers, what is being searched for, and the response object,
		* fill in the response with the combo's items that match.
		*******************************************************************************************************/
		function fillAndMatchPurchasersCombo(listP, request, response) {
			var strSearch = request.term.toLowerCase();		
			if (strSearch == '--all--') strSearch = '';	
 			var isMatch = false;
     		response(j$.map(listP, function(item) {
     			var strLower = item.strName.toLowerCase(); 
     			var strBN = item.strBidderNumber;  
     			if (strBN == null || strBN == '') strBN = 'no bid number';		
   				if (strLower.indexOf(strSearch) >= 0 || strBN.indexOf(strSearch) >= 0) {
	   				// if we find the exact match, get its formal text and id.
	   				// ideally, we'd select it, but I couldn't figure out how!
	   				if (strLower == strSearch || strBN == strSearch) {
	   					j$("#txtPurchasers").val(item.strName).data('Id', item.contactId);
	   					isMatch = true;
	   				}	   				
   					return {label: item.strName, value: item.contactId, bidderNumber: item.strBidderNumber };
   				}
   			}));
   			
   			// if we don't find a match for a real search, clear the cached value.
			if (!isMatch ) {
     			j$("#txtPurchasers").data('Id', null);
			}	        														   
   			
		}

		/*******************************************************************************************************
		* specify the select event for Purchasers, so it can cause the opportunities panel to refresh.
		*******************************************************************************************************/
		j$('#txtPurchasers').autocomplete("option", "select",
			function(event, ui) {
				j$(this).val(ui.item.label).data('Id', ui.item.value);
	   			// call the controller to update the Purchasers panel.
	   			ChangePurchaserLookup(ui.item.value);			   		
		   		return false;		   		 
		   	}
		);

		/*******************************************************************************************************
		* specify the Change event for Purchasers, so it can update the controller to refresh the opps panel. 
		* Change called when the field is blurred (loses focus), if the value has changed;
		* ui.item refers to the selected item, if one was selected from the autocomplete menu.
		*******************************************************************************************************/
		j$('#txtPurchasers').autocomplete("option", "change",
			function(event, ui) {
				// if ui.item is provided, we already dealt with it in the select event.
				if (ui.item != null) return false;	
				
				var Id = j$(this).data('Id');
				if (Id == null && j$(this).val() != null) {
					// did the user give enough time for the search to run?
					// better go the search route!
					SearchPurchaserLookup(j$(this).val());
					return false;				
				}
				ChangePurchaserLookup(Id);
				return false;				
		   	}
		);
			
		/*******************************************************************************************************
		* setup the button for showing all items		
		*******************************************************************************************************/
		j$(".clsBtnAll" )
			.attr( "tabIndex", -1 )
			.attr( "title", "Show All Items" )
			.button({
				icons: {
					primary: "ui-icon-triangle-1-s"
				},
				text: false
			})
			.removeClass( "ui-corner-all" )
			.addClass( "ui-corner-right ui-button-icon" )
			.click(function() {
				// find our input textbox to our left
				var input = j$(this).prev('input');
				if (input.autocomplete( "option", "source" ) == null) return;
				// close if already visible
				if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
					input.autocomplete( "close" );
					return;
				}
	
				// work around a bug (likely same cause as #5265)
				j$( this ).blur();
	
				// pass empty as value to search for all
				input.autocomplete( "search", "--all--" );
				input.focus();
			});	
		
	

	    // set Purchaser name
	    j$('#txtPurchasers').val(strNamePurchaser);	
	    	    
	} // end of myInitializeJQueryUI
	
	
	/*******************************************************************************************************
	* utility to deal with strings that might be null.
	*******************************************************************************************************/
	function strNull(str) {
		return (str == null ? '' : str);
	}
		
</script>
 	
	<apex:outputPanel id="panelReportParameters" rendered="{!RenderFormat==null}" >
   	<apex:sectionHeader title="Auction Receipts" />      
    <apex:form >   		    
        <apex:pageBlock mode="edit" title="Search by Name or Bidder Number" >
       		<apex:actionStatus id="statusLoad" onstart="j$('#divLoading').fadeIn();" onstop="j$('#divLoading').fadeOut();" />
			<div class="cssLoading" id="divLoading" >
			  <p style="vertical-align: middle;" >
				<img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
				<span style="vertical-align: middle;" >Loading...</span>
			  </p>
			</div>  

 			<div class="cssTabHelpLink" id="linkHelp">
	  			<a class="helpLink" onclick="document.getElementById('linkHelp').style.display='none'; document.getElementById('divHelp').style.display='block';">
					<img src="/img/arrowRight.gif" />Show Help&nbsp;<img src="/s.gif" alt="" class="helpIcon" title=""/>
				</a>
			</div>
	   		<div id="divHelp" class="cssHelpText" style="display:none" >
	       		<div class="hideHelpLink">	       			
					<a class="helpLink" onclick="document.getElementById('divHelp').style.display='none';document.getElementById('linkHelp').style.display='block';">
						<img src="/img/arrowDown.gif" />Hide
					</a>
				</div>
				<p style="padding-left:30px">Auction Receipts creates a PDF report you can save or print.</p>
				<ul>
				<li>You can create a single page PDF for the specified Guest, or a multi-page PDF with a separate page for each Guest.</li>
				<li>You can add additional Auction Purchase fields to the report's table using the Opportunity Field Set <b>AuctionReceiptsFS</b>.</li>
				<li>You can provide formatted text for the introduction on each page by setting the Auction Custom Settings <b>Auction Receipts Intro 1 &amp; 2</b>.</li>
				<li>You can provide formatted text for the footer on each page by setting the Auction Custom Settings <b>Auction Receipts Footer 1 &amp; 2</b>.</li>
				<li>The footer can even include an image tag to an image stored in Salesforce or on your public website.  See the documentation for details.</li>
				</ul>
	  		</div>


			<apex:outputPanel id="panelSearch" styleClass="panelSearch" >				            
	            <apex:pageBlockSection columns="1"  >
	                <apex:pageBlockSectionItem labelStyle="vertical-align:middle;" dataStyle="vertical-align:middle;">
		    			<apex:outputLabel value="Auction" for="lbxAuctions" />
				    	<apex:selectList value="{!auctionId}" size="1" id="lbxAuctions" >
				    		<apex:actionSupport event="onchange" status="statusLoad" action="{!ChangeAuction}" 
				    			rerender="panelSearch" 
				    			oncomplete="auctionId='{!JSENCODE(auctionId)}'; listPurchasers=null; myInitializeJQueryUI('{!JSENCODE(strNamePurchaser)}');" />			    			
				    		<apex:selectOptions value="{!listSOAuctions}" />
				    	</apex:selectList>	
					</apex:pageBlockSectionItem>
	                <apex:pageBlockSectionItem labelStyle="vertical-align:middle;" dataStyle="vertical-align:middle;">
			       		<apex:outputLabel value="Guest" />
		                <apex:outputPanel >
						   	<input type="text" id="txtPurchasers" class="clsCombo clsComboPurchasers ui-autocomplete-input" /> 
						   	<button id="btnAll" class="clsBtnAll ui-button ui-widget ui-state-default ui-button-icon-only ui-corner-right ui-button-icon" type="button" >&nbsp;</button>           
						    <apex:actionFunction action="{!ChangePurchaserLookup}" name="ChangePurchaserLookup" status="statusLoad" 
				    			rerender="panelSearch" 
						    	oncomplete="myInitializeJQueryUI('{!JSENCODE(strNamePurchaser)}');" >
						        <apex:param name="param1" assignTo="{!contactIdPurchaser}" value="" />
						    </apex:actionFunction>
						    <apex:actionFunction action="{!SearchPurchaserLookup}" name="SearchPurchaserLookup" status="statusLoad" 
				    			rerender="panelSearch" 
						    	oncomplete="myInitializeJQueryUI('{!JSENCODE(strNamePurchaser)}');" >
						        <apex:param name="param1" assignTo="{!searchPurchaser}" value="" />
						    </apex:actionFunction>
		                </apex:outputPanel>
	                </apex:pageBlockSectionItem>		
					
		    		<apex:pageBlockSectionItem >
						<apex:outputLabel value="Include all Guests?" for="cbxIncludeAllGuests" />
						<apex:outputPanel >
							<!-- without the actionSupport, our checkbox state wasn't going to the server before the OpenPDF action call. -->
							<apex:inputCheckbox value="{!fIncludeAllGuests}" id="cbxIncludeAllGuests" immediate="true" >
						    	<apex:actionSupport event="onclick" status="statusLoad" action="{!ChangeIncludeAllGuests}" 
						    	rerender="panelSearch" 
						    	oncomplete="myInitializeJQueryUI('{!JSENCODE(strNamePurchaser)}');" />
							</apex:inputCheckbox>
						</apex:outputPanel>
					</apex:pageBlockSectionItem>

		    		<apex:pageBlockSectionItem >
						<apex:outputLabel value="Include ticket purchases?" for="cbxIncludeTicketPurchases" />
						<apex:outputPanel >
							<!-- without the actionSupport, our checkbox state wasn't going to the server before the OpenPDF action call. -->
							<apex:inputCheckbox value="{!fIncludeTicketPurchases}" id="cbxIncludeTicketPurchases" immediate="true" >
						    	<apex:actionSupport event="onclick" status="statusLoad" action="{!ChangeIncludeTicketPurchases}" 
						    	rerender="panelSearch" 
						    	oncomplete="myInitializeJQueryUI('{!JSENCODE(strNamePurchaser)}');" />
							</apex:inputCheckbox>
						</apex:outputPanel>
					</apex:pageBlockSectionItem>
				
		    		<apex:pageBlockSectionItem >
						<apex:outputText value="" />
				    	<apex:commandButton value="Open PDF" onclick="window.open('{!JSENCODE(strOpenReceiptURL)}'); return false;"  immediate="false" />
					</apex:pageBlockSectionItem>
				</apex:pageBlockSection>
				<p/><p/>
			</apex:outputPanel>
			</apex:pageBlock>			
		</apex:form>			
	</apex:outputPanel>
	
	<!-- ========================================================== PDF RENDERING STARTS HERE ================================================ -->	
	<apex:outputPanel id="panelReportPDF" rendered="{!RenderFormat=='pdf'}" >  
		<div  style="font-size:.9em;" >	
        <apex:pageMessage summary="There are no purchases for the specified people." severity="info" strength="2" rendered="{!NOT(HasReceipts)}" />  
    	<apex:repeat var="receipt" value="{!listReceipts}">   	    	
		<div style="page-break-after:{!IF(contactIdPurchaser=='', 'always', 'none')};">
	    	<apex:outputPanel id="panelReceipt" >		
		    	<h2 style="text-align:center"><apex:outputText value="{!receipt.strPageTitle}" /></h2> 
		    	<p style="text-align:center"><apex:outputText value="{0,date,MMMM d, yyyy}" >
		    			<apex:param value="{!receipt.dtAuction}" />
		    		</apex:outputText>
		    	</p>
		    	<p><apex:outputText value="{!receipt.strContactName}" /><br/>
				<apex:outputText value="{!receipt.strContactAddrLine1}" /><br/>
				<apex:outputText value="{!receipt.strContactAddrLine2}" /><br/>
				<apex:outputText value="{! 'bid number: ' + receipt.strBidNumber}" /><br/>
				</p><p/>
			
			 	<p>Dear&nbsp;<apex:outputText value="{!receipt.strContactFirstName}" />,<br/><br/>
		    	<apex:outputText value="{!strAuctionReceiptsIntro}" escape="false" /></p>
				<table> <!-- this table was put in to get the text after the purchases datatable to display below it! -->
					<tr><td>

					<h3>Your Purchases</h3> 
					<table cellspacing="2px" >
						<tr style="vertical-align:bottom;text-align:left; font-weight:bold; ">
							<td>Item&nbsp;&nbsp;&nbsp;</td>
							<td  style="text-align:right" >&nbsp;&nbsp;&nbsp;Amount</td>
							<td style="text-align:right" >&nbsp;&nbsp;&nbsp;Fair Market<br/>Value</td>
							<td style="text-align:right" >&nbsp;&nbsp;&nbsp;Deductible<br/>Amount</td>
							<td style="text-align:right" >&nbsp;&nbsp;&nbsp;</td>
			            	<!-- additional Opportunity fields use a fieldset -->
							<apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionReceiptsFS}" var="f" >
								<td>{!f.Label}&nbsp;&nbsp;&nbsp;</td>					
							</apex:repeat>
						</tr>
						<tr>
							<td colspan="30">
								<hr/>
							</td>
						</tr>

						<apex:repeat value="{!receipt.listOppAuctionPurchases}" var="oppAP" >
						<tr>
							<td style="vertical-align:center" >
								<apex:outputText value="{!IF(oppAP.RecordType.Name=='GW Auction Ticket', 'Tickets', NULLVALUE(oppAP.Auction_Item_Name__c, oppAP.Description))}"/>
								&nbsp;&nbsp;&nbsp;
							</td>
							<td style="text-align:right" >
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!oppAP.Amount}" />
								</apex:outputText>
							</td>
							<td style="text-align:right" >
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!oppAP.Auction_Non_Deductible_Amount__c}"/>
								</apex:outputText>
							</td>
							<td style="text-align:right" >
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!oppAP.Auction_Deductible_Amount__c}"/>
								</apex:outputText>
							</td>
							<td></td>
			            	<!-- additional Opportunity fields use a fieldset -->
							<apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionReceiptsFS}" var="f" >
								<td style="vertical-align:center" >
					   				<apex:outputField value="{!oppAP[f]}" />					   				
								</td>
				  			</apex:repeat>                    																				
						</tr>
						</apex:repeat>
						
						<tr>
							<td colspan="30">
								<hr/>
							</td>
						</tr>

						<tr style="vertical-align:bottom;text-align:left; font-weight:bold;">
							<td>Totals</td>
							<td style="text-align:right" >
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!receipt.decTotalAmountPaid}"/> 
								</apex:outputText>							
							</td>
							<td style="text-align:right" >
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!receipt.decTotalFMV}"/> 
								</apex:outputText>								
							</td>
							<td style="text-align:right" >
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!receipt.decTotalAmountDeductible}"/> 
								</apex:outputText>								
							</td>
							<td></td>
			            	<!-- additional Opportunity fields use a fieldset -->
							<apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionReceiptsFS}" var="f" >
								<td></td>					
							</apex:repeat>						
						</tr>
					</table>

					</td></tr>
					<tr><td><p><apex:outputText value="{!strAuctionReceiptsFooter}" escape="false" /></p></td></tr>
				</table>									   	
	    	</apex:outputPanel>
		</div><!-- this forces the page break in the PDF. -->
	</apex:repeat>
	</div>
	</apex:outputPanel>
	
	<apex:outputPanel id="panelReportPDF2" rendered="{!RenderFormat=='pdf'}" >  	
    	<apex:repeat var="receipt" value="{!listReceipts2}">   	    	
		<div style="page-break-after:{!IF(contactIdPurchaser=='', 'always', 'none')};">
	    	<apex:outputPanel id="panelReceipt2" >		
		    	<h2 style="text-align:center"><apex:outputText value="{!receipt.strPageTitle}" /></h2> 
		    	<p style="text-align:center"><apex:outputText value="{0,date,MMMM d, yyyy}" >
		    			<apex:param value="{!receipt.dtAuction}" />
		    		</apex:outputText>
		    	</p>
		    	<p><apex:outputText value="{!receipt.strContactName}" /><br/>
				<apex:outputText value="{!receipt.strContactAddrLine1}" /><br/>
				<apex:outputText value="{!receipt.strContactAddrLine2}" /><br/>
				<apex:outputText value="{! 'bid number: ' + receipt.strBidNumber}" /><br/>
				</p><p/>
			 	<p>Dear&nbsp;<apex:outputText value="{!receipt.strContactFirstName}" />,<br/><br/>
		    	<apex:outputText value="{!strAuctionReceiptsIntro}" escape="false" /></p>
				<table> <!-- this table was put in to get the text after the purchases datatable to display below it! -->
					<tr><td>

					<h3>Your Purchases</h3> 
					<table cellspacing="2px" >
						<tr style="vertical-align:bottom;text-align:left; font-weight:bold; ">
							<td>Item</td>
							<td style="width:80px;" >Amount</td>
							<td>Fair Market<br/>Value</td>
			            	<!-- additional Opportunity fields use a fieldset -->
							<apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionReceiptsFS}" var="f" >
								<td>{!f.Label}</td>					
							</apex:repeat>
						</tr>
						<tr>
							<td colspan="30">
								<hr/>
							</td>
						</tr>

						<apex:repeat value="{!receipt.listOppAuctionPurchases}" var="oppAP" >
						<tr>
							<td>
								<apex:outputText value="{!IF(oppAP.RecordType.Name=='GW Auction Ticket', 'Auction Tickets', NULLVALUE(oppAP.Auction_Item_Name__c, oppAP.Description))}"/>
								&nbsp;&nbsp;&nbsp;
							</td>
							<td>
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!oppAP.Amount}" />
								</apex:outputText>
							</td>
							<td>
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!oppAP.Auction_Non_Deductible_Amount__c}"/>
								</apex:outputText>
							</td>
			            	<!-- additional Opportunity fields use a fieldset -->
							<apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionReceiptsFS}" var="f" >
								<td>
					   				<apex:outputField value="{!oppAP[f]}" />					   				
								</td>
				  			</apex:repeat>                    																				
						</tr>
						</apex:repeat>
						
						<tr>
							<td colspan="30">
								<hr/>
							</td>
						</tr>

						<tr style="vertical-align:bottom;text-align:left; font-weight:bold;">
							<td>Totals</td>
							<td>
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!receipt.decTotalAmountPaid}"/> 
								</apex:outputText>							
							</td>
							<td>
								<apex:outputText value="{0,Number,$#,###.##}" >
									<apex:param value="{!receipt.decTotalFMV}"/> 
								</apex:outputText>								
							</td>
			            	<!-- additional Opportunity fields use a fieldset -->
							<apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionReceiptsFS}" var="f" >
								<td></td>					
							</apex:repeat>						
						</tr>
					</table>

					</td></tr>
					<tr><td><p><apex:outputText value="{!strAuctionReceiptsFooter}" escape="false" /></p></td></tr>
				</table>									   	
	    	</apex:outputPanel>
		</div><!-- this forces the page break in the PDF. -->
	</apex:repeat>
    <apex:pageMessage summary="{!strErrorMessage}" severity="info" strength="2" rendered="{!strErrorMessage!=null}" />  
	</apex:outputPanel>	
		
</apex:page>