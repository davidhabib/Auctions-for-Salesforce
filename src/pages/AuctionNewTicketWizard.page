<!-- 
// Written by David Habib, copyright (c) 2009-2013 DJH Consulting, djhconsulting.com 
// This program is released under the GNU Affero General Public License, Version 3. http://www.gnu.org/licenses/
 -->

<apex:page controller="AUC_CTRL_AuctionNewTicketWizard" title="New Auction Ticket Wizard" tabStyle="Auction_Tickets__tab" lightningStylesheets="true">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<apex:stylesheet value="{!$Resource.AuctionCommonStylesCSS}" />
 
	<script type="text/javascript">
	    var j$ = jQuery.noConflict();
 	
		// function to populate Table Name/Number fields when the first one is filled in.
		function OnChangeTxtTableNameNumber(txt) {
			var rg = document.getElementsByTagName('input');
			var i = 0; 
			for (i = 0; i < rg.length; i++) {
				if (rg[i].id.indexOf('txtTableNameNumber') > -1) {
					if (rg[i].value == '') {
						rg[i].value = txt.value;
					}
				}
			}
 		}
 	</script>
 	
<style>

    .cssLoadingPP {
		top: 60%;
	}   

	.cssTextArea {
		height: 5em;
		width: 14em;		
	}
			 		
</style>
 
    <apex:form styleClass="{!IF($User.UITheme == 'Theme3', '', 'slds-scope')}">
		<apex:sectionHeader title="Auction Tickets" />
		<apex:pageBlock title="{!IF(opp.Id!=null,'Edit','New') + ' Auction Ticket'}" mode="edit" id="pbMain" >
            <apex:pageBlockButtons >
                <apex:commandButton action="{!Save}" value="Save"/>
                <apex:commandButton action="{!SaveAndClose}" value="Save & Close"/>
                <apex:commandButton action="{!Cancel}" value="{!IF(ISNULL(strSaveResults), 'Cancel', 'Close')}" immediate="true"/>
            </apex:pageBlockButtons>      
            <apex:pageMessage summary="{!strSaveResults}" severity="info" strength="2" rendered="{!strSaveResults!=null}" />  
            <apex:messages styleClass="Error" />  
            
 			<div class="cssTabHelpLink" id="linkHelp">
	  			<a class="helpLink" onclick="document.getElementById('linkHelp').style.display='none'; document.getElementById('divHelp').style.display='block';">
					<img src="/img/arrowRight.gif" />Show Help&nbsp;<img src="/s.gif" alt="" class="helpIcon" title=""/>
				</a>
			</div>
	   		<div id="divHelp" class="cssHelpText" style="display:none" >
	       		<div class="hideHelpLink">	       			
					<a class="helpLink" onclick="document.getElementById('divHelp').style.display='none';document.getElementById('linkHelp').style.display='block';">
						<img src="/img/arrowDown.gif" />Hide
					</a>
				</div>
				<p style="padding-left:30px">Fill in the information for the Ticket purchase, followed by the Attendees paid for by this ticket.</p>
				<ul>
				<li>For ticket purchases by an individual, fill in the <b>Contact</b> field.&nbsp;&nbsp;For ticket purchases by an {!$ObjectType.Account.Label}, fill in the <b>{!$ObjectType.Account.Label}</b> field.</li>
				<li>The <b>Per Ticket Non-Deductible Amount</b> field is pre-filled with the amount specified in the Auction.  Change it if the Auction has different ticket non-deductible amounts.</li>
				<li>Changing the <b>Number of Tickets</b> field will refresh the Attendees grid.</li>
				<li>You can leave <b>Bid Number</b> empty for now, and later use the <b>Assign Bid Number</b> button on the Tickets tab.</li>
				<li>When using the Credit Card processor to charge for the Ticket, you must still click the <b>Save</b> or <b>Save &amp; Close</b> button to save the Ticket and Attendee information.</li>
				</ul>
				<p style="padding-left:30px">Customizations</p>
				<ul>
				<li>Add additional Ticket fields to the page using the Opportunity Field Set <b>AuctionNewTicketWizardFS</b>.</li>
				<li>Add additional fields to the Attendees grid using the Campaign Member Field Set <b>AuctionNewTicketWizardFS</b>.</li>
				<li>Specify what fields to save the <b>Payment Method</b> and <b>Check Number</b> in by setting several Custom Settings.  See the <b>Installation &amp; Configuration Guide</b> for details.</li>
				<li>Integrate a Credit Card processor on this page by setting several Custom Settings.  See the <b>Installation &amp; Configuration Guide</b> for details.</li>
				</ul>
	  		</div>
            
                        
            <apex:pageBlockSection title="Ticketing Information" columns="2">
                <apex:inputField value="{!opp.Name}" id="txtName" required="true" rendered="{!opp.Id != null}" />
				<apex:pageBlockSectionItem rendered="{!opp.Id != null}" />

                <apex:inputField value="{!contactRole.ContactId}" required="false" />                	       			
            
            	<!-- additional Opportunity fields use a fieldset -->
				<apex:repeat value="{!$ObjectType.Opportunity.FieldSets.AuctionNewTicketWizardFS}" var="f" >
   					<apex:inputField value="{!opp[f]}" 
   						styleClass="{!IF(f.Type == 'textarea', 'cssTextArea', '')}"    					
	   					required="{!IF(OR(f.DBRequired, f.Required), 'true', 'false')}" />
	  			</apex:repeat>                    	
                
                <!-- special case Number of Tickets, so we can update the attendees panel. -->
                <apex:inputField value="{!opp.Number_of_Tickets__c}" required="true" >
    	        	<apex:actionSupport immediate="false" event="onchange" action="{!OnChange_NumberOfTickets}" 
    	        		rerender="pbsAttendees, pbMain" focus="txtDescription" status="statusLoad" />
        			<apex:actionStatus startText="Loading..." stopText="" id="statusLoading" startStyle="color:green; font-style:italic" />
                </apex:inputField>

                <!-- special case FMV Override. -->
                <apex:pageBlockSectionItem >
                	<apex:outputLabel value="Per Ticket Non-Deductible Amount" />
                	<apex:inputText value="{!decTicketFMV}" required="true" id="PerTicketNon-DeductibleAmount" />
				</apex:pageBlockSectionItem>
				
            </apex:pageBlockSection>
            
   			<apex:actionStatus id="statusLoad" onstart="document.getElementById('divLoading').style.display='inline';" onstop="document.getElementById('divLoading').style.display='none';" />       			
			<div class="cssLoading" id="divLoading" >
			  <p style="vertical-align: middle;" >
				<img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
				<span class="loadingText" style="vertical-align: middle;" >Processing...</span>
			  </p>
			</div>        				            					            
                        
	    <apex:outputPanel id="panelPayment" > 
			<script>			    		
				/*******************************************************************************************************
				* utility to invoke the credit card payment processor
				* NOTE: had to locate this within the outputPanel that gets refreshed, to get the current URL formula.
				*******************************************************************************************************/
				function displayPaymentProcessor(strPaymentMethod) {
					if (strPaymentMethod == 'Check') {
						ChangePaymentMethod();
						return;
					} else if (strPaymentMethod == 'Cash') {
						ChangePaymentMethod();
						return;
					}
					else if ('{!JSENCODE(strCreditCardChargeURL)}' == '') {
						// assume they are charging the card outside of Salesforce.
						ChangePaymentMethod();
						return;
					} else if ('{!opp.Amount}' == '') {
						alert('Please fill in the Ticket Amount, before opening the credit card processor.');
						return;
					} else if ({!fShowPaymentProcessorOnPage}) { 
						ShowPanelCreditCard();
						return; 
					} else { 
						ChangePaymentMethod();
						window.open('{!JSENCODE(strCreditCardChargeURL)}','','{!JSENCODE(strPaymentProcessorWindowParameters)}');
						return;
					}	
				}		
			</script>		    		

	    	<apex:actionFunction action="{!ShowPanelCreditCard}" name="ShowPanelCreditCard" status="statusLoad" 
	    		rerender="panelPayment" />			    		
	    				    	   
            <apex:pageBlockSection title="Payment Method" rendered="true" >
            	<apex:pageMessage severity="warning" strength="1" rendered="{!isPaymentSettingsMissing}"
            		summary="Your Auction Settings are not filled out to specify where to store the Payment Method." />
				<apex:selectRadio value="{!strPaymentMethod}" style="font-weight:bold;" onclick="displayPaymentProcessor(this.value);" >
					<apex:selectOption itemValue="Cash" itemLabel="Cash" />
					<apex:selectOption itemValue="Check" itemLabel="Check" />
					<apex:selectOption itemValue="Credit Card" itemLabel="Credit Card" />
				</apex:selectRadio>	
	    		<apex:actionFunction action="{!ChangePaymentMethod}" name="ChangePaymentMethod" status="statusLoad"  
	    			rerender="panelPayment" >
	    		</apex:actionFunction>																	
			
				<apex:outputPanel id="panelCheck" rendered="{!strPaymentMethod == 'Check'}" >
						<apex:outputLabel value="Check Number" style="font-weight:bold;" />&nbsp;&nbsp;&nbsp;&nbsp;
						<apex:inputText value="{!strCheckNumber}" />
				</apex:outputPanel>					
			</apex:pageBlockSection>

			<apex:outputPanel id="panelCreditCard" rendered="{!fShowPanelCreditCard}" >
				<div class="cssLoading cssLoadingPP"  >
				  <p style="vertical-align: middle; text-align:center;" >
					<img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." style="vertical-align: middle;"/>
					<span style="vertical-align: middle;" >Loading Payment Processor...</span>
				  </p>
				</div>	       				
   				<iframe id="iframePP" frameborder="0" width="95%" scrolling="auto" height="{!JSENCODE(strPaymentProcessorPageHeight)}" src="{!JSENCODE(strCreditCardChargeURL)}" />
   				<script>
   					j$('.cssLoadingPP').fadeIn();
   					j$('#iframePP').load(function(){   
   						j$('.cssLoadingPP').fadeOut();
   					});
   				</script>
			</apex:outputPanel>						
		</apex:outputPanel>						
            
            <apex:pageBlockSection title="Add Auction Attendees" columns="1" id="pbsAttendees"
								   rendered="{!opp.Number_of_Tickets__c != null && opp.Number_of_Tickets__c > 0}" >
            	<p style="font-weight:bold">Please list each individual that is attending with the purchase of these tickets.</p>
            	<br/>
        
				<apex:pageBlockTable value="{!listCmpMbrAttendees}" var="cmpmbr" >
					<apex:column style="text-align:center;" width="20px">		 				
						<apex:facet name="header"><div style="text-align:center;">Action</div></apex:facet>
		                <apex:commandLink action="{!DeleteCM}" value="Del" onclick="if (confirm('Are you sure?')==false) { return false;}" rendered="{!cmpmbr.id != null}" >
					    	<apex:param assignTo="{!idDeleteCM}" name="idDeleteCM" value="{!cmpmbr.id}" /> 
		                </apex:commandLink>
					</apex:column>	
					
	            	<!-- CM fields use a fieldset -->
					<apex:repeat value="{!$ObjectType.CampaignMember.FieldSets.AuctionNewTicketWizardFS}" var="f" >	
						<apex:column rendered="{!$ObjectType.CampaignMember.Fields.Status.Label != f.Label && 
								$ObjectType.CampaignMember.Fields.Table_Name_Number__c.Label != f.Label}"
								style="text-align:center;" >
							<apex:facet name="header"><div style="text-align:center;">{!f.Label}</div></apex:facet>
	   						<apex:inputField value="{!cmpmbr[f]}" required="false"  />
						</apex:column>					
						<!--  special case Status to use custom setting of values in picklist -->
						<apex:column rendered="{!$ObjectType.CampaignMember.Fields.Status.Label == f.Label}" 
							style="text-align:center;" >
							<apex:facet name="header"><div style="text-align:center;">{!f.Label}</div></apex:facet>
						   	<apex:selectList value="{!cmpmbr.Status}" size="1" required="false"  >
						   		<apex:selectOptions value="{!listSOStatuses}" />
						   	</apex:selectList>
						</apex:column>											
						<!--  special case Table Name/Number to do auto copying of name/number to empty fields -->						
						<apex:column rendered="{!$ObjectType.CampaignMember.Fields.Table_Name_Number__c.Label == f.Label}" 
							style="text-align:center;" >
							<apex:facet name="header"><div style="text-align:center;">{!f.Label}</div></apex:facet>
							<apex:inputField id="txtTableNameNumber" value="{!cmpmbr.Table_Name_Number__c}" required="false" 
								onchange="OnChangeTxtTableNameNumber(this);" />
						</apex:column>										
		  			</apex:repeat>        	            	 
				</apex:pageBlockTable>	        
            </apex:pageBlockSection>        
        </apex:pageBlock>                
    </apex:form>
</apex:page>